#!/usr/bin/env python3
"""
TLS Fragment Proxy - OpenWrt optimized version
"""

import sys
import os
import json
import signal
import logging
from pathlib import Path

# Add the package to Python path
sys.path.insert(0, '/usr/lib/python3.11/site-packages')

try:
    from tlsfragment.server import TLSFragmentServer
    from tlsfragment.config import load_config
except ImportError as e:
    print(f"Failed to import TLS Fragment modules: {e}")
    sys.exit(1)

def signal_handler(signum, frame):
    """Handle shutdown signals"""
    print("Received shutdown signal, stopping server...")
    sys.exit(0)

def main():
    """Main entry point"""
    # Register signal handlers
    signal.signal(signal.SIGTERM, signal_handler)
    signal.signal(signal.SIGINT, signal_handler)
    
    # Load configuration
    config_file = '/etc/tlsfragment/config.json'
    if not os.path.exists(config_file):
        print(f"Configuration file not found: {config_file}")
        sys.exit(1)
    
    try:
        config = load_config(config_file)
    except Exception as e:
        print(f"Failed to load configuration: {e}")
        sys.exit(1)
    
    # Setup logging
    log_level = getattr(logging, config.get('loglevel', 'INFO').upper())
    logging.basicConfig(
        level=log_level,
        format='%(asctime)s [%(levelname)s] %(name)s: %(message)s',
        datefmt='%Y-%m-%d %H:%M:%S'
    )
    
    # Start server
    try:
        server = TLSFragmentServer(config)
        print(f"Starting TLS Fragment Proxy on port {config['port']}")
        server.start()
    except Exception as e:
        print(f"Failed to start server: {e}")
        sys.exit(1)

if __name__ == '__main__':
    main()
